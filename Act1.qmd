---
title: "Actividad 1. An√°lisis de datos en el √°mbito cl√≠nico"
author: "Alberto Montero Solera"
date: today
format:
  html:
    toc: true
    toc-depth: 3
    toc-location: left
    number-sections: true
    code-fold: true
    code-tools: true
    fig-cap-location: top
    theme: readable
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    page-layout: full
    self-contained: true
---

```{r setup, include=FALSE}
paquetes <- c("knitr", "readxl", "skimr", "dplyr", "DT", "ggplot2",  
              "gridExtra", "tidyr", "reshape2", "stats", "corrplot", 
              "caret", "pROC", "kableExtra", "survival", "survminer", 
              "lubridate", "purrr")

for (paquete in paquetes) {
  if (!requireNamespace(paquete, quietly = TRUE)) {
    install.packages(paquete)
  }
}

lapply(paquetes, library, character.only = TRUE)

opts_chunk$set(echo = TRUE, collapse = TRUE)

# Identificaci√≥n del ordenador donde se ejecuta
my_computer <- Sys.info()[c(4, 1, 5, 7)]
```

```{r, include=FALSE}
analizar_variables <- function(data, variables_interes) {
  
  # Crear listas vac√≠as para almacenar variables seg√∫n condici√≥n
  vars_numericas <- list()
  vars_categoricas <- list()
  
  # Iterar sobre cada variable en la lista de inter√©s
  for (variable in variables_interes) {
    
    # Verificar si la variable existe en el dataset
    if (!(variable %in% colnames(data))) {
      message(paste("‚ö†Ô∏è Advertencia: La variable", variable, "no est√° en el dataset."))
      next  # Pasar a la siguiente variable
    }
    
    # Si la variable es num√©rica, agregarla a la lista de num√©ricas
    if (is.numeric(data[[variable]])) {
      vars_numericas[[variable]] <- data[[variable]]
    }
    
    # Si la variable es categ√≥rica (factor o character), agregarla a la lista de categ√≥ricas
    if (is.character(data[[variable]]) || is.factor(data[[variable]])) {
      vars_categoricas[[variable]] <- as.factor(data[[variable]])  # Convertir a factor si es character
    }
  }
  
  # Devolver ambas listas en un solo objeto
  return(list(Numericas = vars_numericas, Categoricas = vars_categoricas))
}

# üìå Funci√≥n para analizar m√∫ltiples variables en un dataset
analizar_variables_df <- function(data, variables) {
  
  # Verificar que las variables existan en el dataset
  variables_existentes <- variables[variables %in% colnames(data)]
  
  if (length(variables_existentes) == 0) {
    stop("‚ùå Ninguna de las variables especificadas est√° en el dataset.")
  }
  
  # üìå Lista para almacenar los resultados
  resultados_list <- list()
  
  # üìå Iterar sobre cada variable
  for (variable in variables_existentes) {
    
      # Extraer estad√≠sticas
      resumen <- summary(data[[variable]], na.rm = TRUE)
      
      # Crear DataFrame con estad√≠sticas
      df_resumen <- data.frame(
        Variable = variable,
        Min = as.numeric(resumen[1]),  
        Q1 = as.numeric(resumen[2]),
        Mediana = as.numeric(resumen[3]),
        Media = mean(data[[variable]], na.rm = TRUE),
        Q3 = as.numeric(resumen[5]),
        Max = as.numeric(resumen[6]),
        Varianza = var(data[[variable]], na.rm = TRUE),
        Desviacion = sd(data[[variable]], na.rm = TRUE)
      )
    
    # Agregar resultados a la lista
    resultados_list[[variable]] <- df_resumen
  }
  
  # üìå Unir todos los resultados en un √∫nico dataframe
  resultados_final <- bind_rows(resultados_list)
  
  return(resultados_final)  # Devolver DataFrame final
}

visualizar_variable <- function(data, variable) {
  if (is.numeric(data[[variable]])) {
    # üìä Si es num√©rica: Histograma y Boxplot
    # Ajustar el binwidth del histograma seg√∫n el rango de la variable
    rango <- range(data[[variable]], na.rm = TRUE)
    binwidth <- (rango[2] - rango[1]) / 30  # Establece el binwidth de manera autom√°tica
    
    p1 <- ggplot(data, aes(x = !!sym(variable))) +
      geom_histogram(binwidth = binwidth, fill = "tomato", color = "black") +
      theme_minimal() +
      labs(title = paste("Histograma de", variable), x = variable, y = "Frecuencia") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas para mejor visualizaci√≥n
    
    p2 <- ggplot(data, aes(y = !!sym(variable))) +
      geom_boxplot(fill = "gold", color = "black") +
      theme_minimal() +
      labs(title = paste("Boxplot de", variable), y = variable) +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
    
    grid.arrange(p1, p2, ncol = 2)
    
  } else {
    # üìä Si es categ√≥rica: Gr√°fico de barras y Pie Chart
    p1 <- ggplot(data, aes(x = !!sym(variable))) +
      geom_bar(fill = "steelblue", color = "black") +
      theme_minimal() +
      labs(title = paste("Distribuci√≥n de", variable), x = variable, y = "Frecuencia") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
    
    p2 <- ggplot(data, aes(x = "", fill = !!sym(variable))) +
      geom_bar(width = 1) +
      coord_polar("y") +
      theme_void() +
      labs(title = paste("Distribuci√≥n de", variable))
    
    grid.arrange(p1, p2, ncol = 2)
  }
}

# üìå Funci√≥n para analizar variables categ√≥ricas en un dataset y devolver un datatable interactivo
analizar_variables_categoricas <- function(data, variables) {
  
  # Verificar que las variables existan en el dataset
  variables_existentes <- variables[variables %in% colnames(data)]
  
  if (length(variables_existentes) == 0) {
    stop("‚ùå Ninguna de las variables especificadas est√° en el dataset.")
  }
  
  # üìå Lista para almacenar los resultados
  resultados_list <- list()
  
  # üìå Iterar sobre cada variable categ√≥rica
  for (variable in variables_existentes) {
    
    if (is.factor(data[[variable]]) | is.character(data[[variable]])) {
      # üìä Si es variable categ√≥rica (factor o car√°cter)
      
      # Frecuencia absoluta de las categor√≠as
      freq_abs <- table(data[[variable]], useNA = "ifany")
      
      # Frecuencia relativa
      freq_rel <- prop.table(freq_abs) * 100
      
      # Moda (categor√≠a m√°s frecuente)
      moda <- names(freq_abs)[which.max(freq_abs)]
      
      # N√∫mero de categor√≠as distintas
      n_categorias <- length(freq_abs)
      
      # Crear DataFrame con estad√≠sticas categ√≥ricas
      df_resumen <- data.frame(
        Variable = variable,
        `N√∫mero de Categor√≠as` = n_categorias,
        `Moda` = moda,
        `Frecuencia Absoluta` = paste(names(freq_abs), ":", freq_abs, collapse = ", "),
        `Frecuencia Relativa (%)` = paste(names(freq_rel), ":", round(freq_rel, 2), collapse = ", ")
      )
    } else {
      next  # Si la variable no es categ√≥rica, se omite
    }
    
    # Agregar resultados a la lista
    resultados_list[[variable]] <- df_resumen
  }
  
  # üìå Unir todos los resultados en un √∫nico dataframe
  resultados_final <- bind_rows(resultados_list)
  

}

# Funci√≥n para procesar los datos
procesar_datos <- function(data, variables_interes) {
  # Eliminar valores NA
  data <- na.omit(data)
  
  # Eliminar filas con "Desconocido" en cualquier variable
  data <- data %>% filter(if_all(everything(), ~ . != "Desconocido"))
  
  # Filtrar valores espec√≠ficos no v√°lidos
  if ("EDAD_DIAGNOSTICO" %in% colnames(data)) {
    data <- data %>% filter(EDAD_DIAGNOSTICO != 999)
  }
  if ("Nx" %in% colnames(data)) {
    data <- data %>% filter(Nx != 999)
  }
  if ("TAMA√ëO" %in% colnames(data)) {
    data <- data %>% filter(TAMA√ëO != 999)
  }
  
  # Imputaci√≥n de valores perdidos
  for (var in variables_interes) {
    if (var %in% colnames(data)) {
      if (is.numeric(data[[var]])) {
        data[[var]][is.na(data[[var]])] <- mean(data[[var]], na.rm = TRUE)
      } else if (is.factor(data[[var]]) || is.character(data[[var]])) {
        moda <- names(which.max(table(data[[var]])))
        data[[var]][is.na(data[[var]])] <- moda
      }
    }
  }
  
  # Detecci√≥n y eliminaci√≥n de valores at√≠picos
  for (var in variables_interes) {
    if (var %in% colnames(data) && is.numeric(data[[var]])) {
      Q1 <- quantile(data[[var]], 0.25, na.rm = TRUE)
      Q3 <- quantile(data[[var]], 0.75, na.rm = TRUE)
      IQR <- Q3 - Q1
      limite_inferior <- Q1 - 1.5 * IQR
      limite_superior <- Q3 + 1.5 * IQR
      data <- data %>% filter(data[[var]] >= limite_inferior & data[[var]] <= limite_superior)
    }
  }
  
  # Seleccionar solo las variables de inter√©s
  data <- data %>% select(all_of(variables_interes))
  
  return(data)
}


# Funci√≥n para preprocesar el dataset
preprocesar_datos <- function(data) {
  
  # Verificar si las columnas existen antes de modificarlas
  if ("GRADO" %in% colnames(data)) {
    data <- data %>%
      mutate(GRADO_CAT = case_when(
        GRADO %in% c(1, 2) ~ "1/2",
        GRADO == 3 ~ "3",
        TRUE ~ NA_character_
      )) %>%
      mutate(GRADO_CAT = as.factor(GRADO_CAT))
  }
  
  if ("HISTOLOGIA" %in% colnames(data)) {
    data <- data %>%
      mutate(HISTOLOGIA_CAT = case_when(
        HISTOLOGIA == "DUCTAL" ~ "DUCTAL",
        TRUE ~ "NO DUCTAL"
      )) %>%
      mutate(HISTOLOGIA_CAT = as.factor(HISTOLOGIA_CAT))
  }
  
  if ("Ki67" %in% colnames(data)) {
    data <- data %>%
      mutate(Ki67_CAT = case_when(
        Ki67 <= 14 ~ "<=14",
        Ki67 > 14 ~ ">14",
        TRUE ~ NA_character_
      )) %>%
      mutate(Ki67_CAT = as.factor(Ki67_CAT))
  }
  
  if ("FENOTIPO_IHQ" %in% colnames(data)) {
    data <- data %>%
      mutate(FENOTIPO_IHQ_CAT = case_when(
        FENOTIPO_IHQ %in% c("LUMINAL A", "LUMINAL B") ~ "LUMINAL",
        FENOTIPO_IHQ %in% c("LUMINAL-HER2", "HER2") ~ "HER2",
        TRUE ~ "TRIPLE NEGATIVO"
      )) %>%
      mutate(FENOTIPO_IHQ_CAT = as.factor(FENOTIPO_IHQ_CAT))
  }
  
  if ("ESTADIO" %in% colnames(data)) {
    data <- data %>%
      mutate(ESTADIO_CAT = case_when(
        ESTADIO %in% c("I", "IA", "IB") ~ "I",
        ESTADIO %in% c("II", "IIA", "IIB") ~ "II",
        ESTADIO %in% c("III", "IIIA", "IIIB", "IIIC") ~ "III",
        TRUE ~ NA_character_
      )) %>%
      mutate(ESTADIO_CAT = as.factor(ESTADIO_CAT))
  }
  
  if ("TIPO_QT_NEOADY_OK" %in% colnames(data)) {
    data <- data %>%
      mutate(QT_CAT = case_when(
        TIPO_QT_NEOADY_OK %in% c("ANTRACICLINAS", "ANTRACICLINAS-TAXANOS", "ANTRACICLINAS-TAXANOS-PLATINOS", "TAXANOS") ~ "NO antiHER2",
        TIPO_QT_NEOADY_OK %in% c("QUIMIOTERAPIA-ANTIHER2", "QUIMIOTERAPIA-ANTIHER2DOBLE") ~ "antiHER2",
        TIPO_QT_NEOADY_OK %in% c("QUIMIOTERAPIA-ANTIHER2-INMUNOTERAPIA", "QUIMIOTERAPIA-INMUNOTERAPIA") ~ "INMUNO",
        TRUE ~ NA_character_
      )) %>%
      mutate(QT_CAT = as.factor(QT_CAT))
  }
  
  if ("No_ANTIBIOTICOS" %in% colnames(data)) {
    data <- data %>%
      mutate(No_ANTIBIOTICOS_CAT = case_when(
        No_ANTIBIOTICOS == 1 ~ "Una vez",
        No_ANTIBIOTICOS >= 2 ~ "Dos veces o m√°s",
        TRUE ~ NA_character_
      )) %>%
      mutate(No_ANTIBIOTICOS_CAT = as.factor(No_ANTIBIOTICOS_CAT))
  }
  
  if ("RCB" %in% colnames(data)) {
    data <- data %>%
      mutate(RCP = case_when(
        RCB %in% c("RCB-0", "RCB-I") ~ "SI",
        RCB %in% c("RCB-II", "RCB-III") ~ "NO",
        TRUE ~ NA_character_
      )) %>%
      mutate(RCP = as.factor(RCP))
  }
  
  return(data)
}

detectar_asociacion <- function(data, evento, variable) {
  
  # Analizar la relaci√≥n con la variable evento (RCP)
  cat("\nüìä Analizando relaci√≥n entre", evento, "y", variable, "\n")
  
  # Convertir la variable 'evento' a factor si no lo es
  data <- data %>% mutate(across(all_of(evento), as.factor))
  
  # Para variables num√©ricas
  if (is.numeric(data[[variable]])) {
    cat("\nüìä (Variable num√©rica)\n")
    
    # Prueba de normalidad con Shapiro-Wilk
    if (nrow(data) >= 50) {
      normalidad <- shapiro.test(data[[variable]])
      es_normal <- normalidad$p.value > 0.05
      cat("\nüìå Prueba de normalidad (Shapiro-Wilk): p-value =", normalidad$p.value, "\n")
    } else {
      es_normal <- FALSE
    }

    # Si hay exactamente dos grupos en la variable evento, considerar prueba t
    if (length(levels(data[[evento]])) == 2 && es_normal) {
      t_test <- t.test(data[[variable]] ~ data[[evento]])
      cat("\nüìå Resultado de la prueba t de Student (dos grupos, distribuci√≥n normal):\n")
      print(t_test)
    } else {
      # Si no, usar correlaci√≥n (Spearman o Pearson seg√∫n normalidad)
      metodo_cor <- ifelse(es_normal, "pearson", "spearman")
      cor_test_result <- cor.test(data[[variable]], as.numeric(as.factor(data[[evento]])), method = metodo_cor)
      cat("\nüìå Resultado de la prueba de correlaci√≥n (", metodo_cor, "):\n")
      print(cor_test_result)
    }
    
    # Visualizaci√≥n con boxplot
    p <- ggplot(data, aes(x = .data[[evento]], y = .data[[variable]], fill = .data[[evento]])) +
      geom_boxplot() +
      theme_minimal() +
      labs(title = paste("Distribuci√≥n de", variable, "por", evento), x = evento, y = variable)
    print(p)
    
  } 
  
  # Para variables categ√≥ricas
  else if (is.factor(data[[variable]]) || is.character(data[[variable]])) {
    cat("\nüìä (Variable categ√≥rica)\n")
    
    # Asegurarse de que ambas variables sean factores
    data <- data %>%
      mutate(across(c(all_of(evento), all_of(variable)), as.factor))
    
    # Crear tabla de contingencia
    tabla <- table(data[[evento]], data[[variable]])
    
    # Realizar la prueba de Chi-cuadrado o Fisher
    if (any(tabla < 5)) {
      test_result <- fisher.test(tabla, simulate.p.value = TRUE)
      cat("\nüìå Se utiliz√≥ la prueba exacta de Fisher debido a frecuencias esperadas menores a 5.\n")
    } else {
      test_result <- chisq.test(tabla)
      cat("\nüìå Se utiliz√≥ la prueba de Chi-cuadrado.\n")
    }
    
    # Imprimir el resultado de la prueba
    print(test_result)
    
    # Visualizaci√≥n con mapa de calor
    p <- ggplot(as.data.frame(tabla), aes(x = Var2, y = Var1, fill = Freq)) +
      geom_tile() +
      scale_fill_gradient(low = "white", high = "blue") +
      theme_minimal() +
      labs(title = paste("Mapa de calor entre", evento, "y", variable), x = variable, y = evento)
    
    print(p)
  }
  
  # Si la variable no es num√©rica ni categ√≥rica
  else {
    cat("\n‚ö† No se pudo determinar el tipo de variable para el an√°lisis.")
  }
}

# Funci√≥n para realizar regresi√≥n log√≠stica con matriz de confusi√≥n y curva ROC
regresion_logistica_visual_combinada <- function(data, evento, variables_significativas, top_n = 5, ordenar_por = "auc") {
  
  library(tidyverse)
  library(pROC)
  library(caret)
  library(knitr)
  library(kableExtra)
  
  # Limpieza
  data <- data %>%
    drop_na(all_of(c(evento, variables_significativas))) %>%
    mutate(across(all_of(evento), ~factor(.x, levels = c("NO", "SI"))))
  
  # Combinaciones
  combinaciones <- unlist(lapply(1:length(variables_significativas), function(x) {
    combn(variables_significativas, x, simplify = FALSE)
  }), recursive = FALSE)
  
  resultados <- list()
  resumen_modelos <- data.frame()
  
  for (combinacion in combinaciones) {
    
    nombre_modelo <- paste(combinacion, collapse = "_")
    formula_logistica <- as.formula(paste(evento, "~", paste(combinacion, collapse = " + ")))
    modelo <- glm(formula_logistica, data = data, family = binomial)
    
    prob <- predict(modelo, type = "response")
    pred <- factor(ifelse(prob > 0.5, "SI", "NO"), levels = c("NO", "SI"))
    
    matriz <- confusionMatrix(pred, data[[evento]], positive = "SI")
    
    auc_valor <- auc(roc(data[[evento]], prob))
    exactitud <- matriz$overall["Accuracy"]
    sensibilidad <- matriz$byClass["Sensitivity"]
    especificidad <- matriz$byClass["Specificity"]
    f1 <- matriz$byClass["F1"]
    
    # Guardar resumen en un data.frame
    resumen_modelos <- rbind(
      resumen_modelos,
      data.frame(
        modelo = nombre_modelo,
        variables = paste(combinacion, collapse = ", "),
        auc = round(auc_valor, 3),
        exactitud = round(exactitud, 3),
        sensibilidad = round(sensibilidad, 3),
        especificidad = round(especificidad, 3),
        f1 = round(f1, 3),
        stringsAsFactors = FALSE
      )
    )
    
    # Guardar resultados completos
    resultados[[nombre_modelo]] <- list(
      resumen_modelo = summary(modelo),
      
      tabla_metricas = kable(
        data.frame(
          M√©trica = c("AUC", "Exactitud", "Sensibilidad", "Especificidad", "F1 Score"),
          Valor = round(c(auc_valor, exactitud, sensibilidad, especificidad, f1), 3)
        ),
        caption = paste("M√©tricas del modelo:", nombre_modelo),
        format = "html"
      ) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
      
      matriz_confusion = kable(as.data.frame(matriz$table),
                               caption = paste("Matriz de Confusi√≥n:", nombre_modelo),
                               format = "html") %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
      
      auc = auc_valor,
      
      grafico_roc = ggroc(roc(data[[evento]], prob)) +
        labs(title = paste("Curva ROC -", nombre_modelo),
             x = "1 - Especificidad", y = "Sensibilidad") +
        theme_minimal()
    )
  }
  
  # Ordenar por m√©trica elegida y seleccionar los mejores
  top_modelos <- resumen_modelos %>%
    arrange(desc(.data[[ordenar_por]])) %>%
    head(top_n)
  
  # Salida
  list(
    todos_los_resultados = resultados,
    resumen_modelos = kable(top_modelos, caption = paste("Top", top_n, "modelos seg√∫n", ordenar_por), format = "html") %>%
      kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
    top_modelos_info = top_modelos
  )
}



preparar_datos_supervivencia <- function(data) {
  data %>%
    mutate(
      FECHA_INICIO_QT = as.Date(FECHA_INICIO_QT),
      FECHA_ULTIMO_CONTROL = as.Date(FECHA_ULTIMO_CONTROL),
      tiempo_sg = as.numeric(difftime(FECHA_ULTIMO_CONTROL, FECHA_INICIO_QT, units = "days")) / 30.44, # en meses
      estado_SG = ifelse(`ESTADO_ULTIMO_\nCONTROL` == "MCE", 1, 0),
      ab = factor(ANTIBIOTICO),
      subtipo = factor(FENOTIPO_IHQ_CAT)
    ) %>%
    filter(!is.na(tiempo_sg) & tiempo_sg >= 0)
}

analisis_supervivencia <- function(data) {
  necesarias <- c("tiempo_sg", "estado_SG", "ab", "subtipo")
  faltantes <- necesarias[!necesarias %in% names(data)]
  if (length(faltantes) > 0) stop(paste("Faltan variables necesarias:", paste(faltantes, collapse = ", ")))

  data <- data %>% drop_na(tiempo_sg, estado_SG, ab, subtipo)

  # Supervivencia global
  km_total <- survfit(Surv(tiempo_sg, estado_SG) ~ 1, data = data)
  g1 <- ggsurvplot(km_total, data = data, title = "Supervivencia Global", xlab = "Meses", ylab = "Prob. de supervivencia")

  # Subtipos moleculares
  km_subtipo <- survfit(Surv(tiempo_sg, estado_SG) ~ subtipo, data = data)
  g2 <- ggsurvplot(km_subtipo, data = data, pval = TRUE, legend.title = "Subtipo", title = "SG por subtipo tumoral")

  # Uso de antibi√≥ticos
  km_ab <- survfit(Surv(tiempo_sg, estado_SG) ~ ab, data = data)
  g3 <- ggsurvplot(km_ab, data = data, pval = TRUE, legend.title = "Antibi√≥ticos", title = "SG por uso de antibi√≥ticos")

  # Por subtipo y antibi√≥ticos
  g4_list <- list()
  for (tipo in levels(data$subtipo)) {
    subdata <- data %>% filter(subtipo == tipo)
    if (nrow(subdata) >= 10 && length(unique(subdata$ab)) > 1) {
      fit_sub <- survfit(Surv(tiempo_sg, estado_SG) ~ ab, data = subdata)
      g4_list[[tipo]] <- ggsurvplot(fit_sub, data = subdata, pval = TRUE,
                                    title = paste("SG por AB en subtipo:", tipo),
                                    legend.title = "Antibi√≥ticos")
    }
  }

  return(list(
    global = g1,
    por_subtipo = g2,
    por_ab = g3,
    por_subtipo_y_ab = g4_list
  ))
}




```

# Objeto de estudio

Este estudio se enfoca en evaluar el impacto del uso de antibi√≥ticos en la respuesta al tratamiento neoadyuvante en pacientes con c√°ncer de mama. Se investiga c√≥mo la alteraci√≥n de la microbiota intestinal, inducida por los antibi√≥ticos, puede influir en la efectividad de la quimioterapia administrada antes de la cirug√≠a.

A trav√©s del an√°lisis de un conjunto de datos cl√≠nicos, se busca identificar posibles asociaciones entre el uso de antibi√≥ticos y los resultados del tratamiento, medidos mediante la escala RCB (Residual Cancer Burden), la supervivencia y el riesgo de reca√≠da.

Este estudio es relevante porque, aunque se ha explorado en otros tipos de c√°ncer, el impacto de los antibi√≥ticos en la respuesta neoadyuvante del c√°ncer de mama a√∫n no est√° bien establecido. El an√°lisis permitir√° comprender mejor si el uso de antibi√≥ticos afecta la probabilidad de alcanzar una respuesta patol√≥gica completa, lo que podr√≠a tener implicaciones en la personalizaci√≥n del tratamiento oncol√≥gico.

# Estudio completo

## Estad√≠stica descriptiva

El conjunto de datos cuenta con las siguientes variables:

```{r, eval=TRUE}
muestra_700_UGC_perdidos <- read_excel("muestra_700_UGC_perdidos.xlsx")
muestra_700_UGC_perdidos <- muestra_700_UGC_perdidos %>%
  mutate_if(is.character, as.factor)
muestra_700_UGC_perdidos$Tn <- factor(muestra_700_UGC_perdidos$Tn)
muestra_700_UGC_perdidos$GRADO <- factor(muestra_700_UGC_perdidos$GRADO)
muestra_700_UGC_perdidos$Nx <- factor(muestra_700_UGC_perdidos$Nx)
skim_without_charts(muestra_700_UGC_perdidos)
```

### Variables de inter√©s de estudio

De todas estas variables encontradas en el conjunto, se va a proceder con el estudio de las siguientes:

-   

    EDAD_DIAGNOSTICO

    :   Edad en a√±os en la que se realiz√≥ el diagn√≥stico del c√°ncer.

-   

    ESTADO_MENOPAUSICO

    :   Estado menop√°usico de la paciente al momento del diagn√≥stico (premenop√°usica, menop√°usica o desconocido).

-   

    HISTOLOGIA

    :   Tipo histol√≥gico del tumor, seg√∫n clasificaci√≥n patol√≥gica.

-   

    GRADO

    :   Grado histol√≥gico del tumor.

-   

    KI67_DICOT

    :   Expresi√≥n del marcador de proliferaci√≥n celular Ki-67.

-   

    FENOTIPO_IHQ

    :   Clasificaci√≥n del tumor seg√∫n inmunohistoqu√≠mica.

-   

    TAMA√ëO

    :   Tama√±o del tumor en cent√≠metros.

-   

    Tn

    :   Clasificaci√≥n T del tumor.

-   

    Nx

    :   Estado ganglionar.

-   

    ESTADIO

    :   Estadio cl√≠nico del c√°ncer.

-   

    TIPO_CIRUGIA

    :   Tipo de cirug√≠a realizada.

-   

    TIPO_QT_NEOADY_OK

    :   Tipo de quimioterapia neoadyuvante administrada.

-   

    RCP

    :   Indica si hubo una respuesta completa patol√≥gica tras el tratamiento neoadyuvante.

-   

    HT_ADY_OK

    :   Indica si la paciente recibi√≥ hormonoterapia adyuvante y el tipo de tratamiento.

-   

    RE Y RP

    :   Estado de los receptores hormonales de estr√≥geno (RE) y progesterona (RP) en el tumor.

-   

    RETRASOS

    :   Indica si hubo o no retrasos.

Para el **an√°lisis univariante** de estas variables, se ha implementado una funci√≥n que **automatiza** el proceso para las variables de inter√©s del conjunto. De esta forma, conseguimos conocer qu√© variables son num√©ricas y cu√°les son categ√≥ricas. Tambi√©n, se muestran res√∫menes estad√≠sticos de cada una de las variables junto a representaciones gr√°ficas.

```{r}
# üìå Ejemplo de uso
variables_a_analizar <- c("EDAD_DIAGNOSTICO", "ESTADO_MENOPAUSICO", "HISTOLOGIA", "GRADO", "KI67_DICOT", "Ki67", "FENOTIPO_IHQ", "TAMA√ëO", "Tn", "Nx", "ESTADIO", "TIPO_CIRUGIA", "TIPO_QT_NEOADY_OK", "RCB", "HT_ADY_OK", "RE", "RP", "RETRASOS", "No_ANTIBIOTICOS", "FECHA_ULTIMO_CONTROL", "FECHA_INICIO_QT", "ESTADO_ULTIMO_\nCONTROL", "ANTIBIOTICO")
resultados <- analizar_variables(muestra_700_UGC_perdidos, variables_a_analizar)

# üìä Ver los resultados
Numericas <- names(resultados$Numericas)  # Ver nombres de variables num√©ricas
Categoricas <- names(resultados$Categoricas)  # Ver nombres de variables categ√≥ricas

```

Una vez conocidas las variables y el tipo de las mismas se va a proceder con el an√°lisis estad√≠stico para cada una.

### Variables num√©ricas {.tabset .tabset-fade .tabset-pills}

En el siguiente dataset puede ver las medidas de tendencia central junto a los cuartiles importantes para cada una de las variables num√©ricas.

```{r}
resultados_multi <- analizar_variables_df(muestra_700_UGC_perdidos, Numericas)

# üìå Mostrar tabla interactiva
datatable(resultados_multi, options = list(pageLength = 10))
```

Para algo m√°s visual de cada una de estas variables puede clickar sobre cada una de las pesta√±as que se encuentran a continuaci√≥n.

#### EDAD_DIAGNOSTICO

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "EDAD_DIAGNOSTICO")
```

#### TAMA√ëO

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "TAMA√ëO")
```

#### RE

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "RE")
```

#### RP

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "RP")
```

### Variables categ√≥ricas {.tabset .tabset-fade .tabset-pills}

```{r}
# An√°lisis de variables categ√≥ricas
resultados_categoricos <- analizar_variables_categoricas(muestra_700_UGC_perdidos, Categoricas)

# Mostrar los resultados
datatable(resultados_categoricos, options = list(pageLength = 3))

```

#### ESTADO_MENOPAUSICO

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "ESTADO_MENOPAUSICO")
```

#### HISTOLOGIA

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "HISTOLOGIA")
```

#### GRADO

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "GRADO")
```

#### KI67_DICOT

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "KI67_DICOT")
```

#### FENOTIPO_IHQ

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "FENOTIPO_IHQ")
```

#### Tn

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "Tn")
```

#### Nx

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "Nx")
```

#### ESTADIO

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "ESTADIO")
```

#### TIPO_CIRUGIA

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "TIPO_CIRUGIA")
```

#### TIPO_QT_NEOADY_OK

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "TIPO_QT_NEOADY_OK")
```

#### RCB

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "RCB")
```

#### HT_ADY_OK

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "HT_ADY_OK")
```

#### RETRASOS

```{r}
visualizar_variable(muestra_700_UGC_perdidos, "RETRASOS")
```

### Limpieza y filtrado de datos {.tabset .tabset-fade .tabset-pills}

Se va a proceder con la detecci√≥n e imputaci√≥n de valores perdidos, as√≠ como la identificaci√≥n de valores at√≠picos. Tambi√©n, se realizar√° un preprocesamiento de los datos que conlleva una categorizaci√≥n y recodificaci√≥n de variables para estratificar adecuadamente la poblaci√≥n de pacientes.

```{r}
# Llamar la funci√≥n y procesar el dataset
df_procesado <- procesar_datos(muestra_700_UGC_perdidos, variables_a_analizar)

# Mostrar el dataset procesado
skim_without_charts(df_procesado)
```

### Categorizaci√≥n y recodificaci√≥n de variables

```{r}
dataset_recodificado <- preprocesar_datos(df_procesado)

skim_without_charts(dataset_recodificado)
```

## An√°lisis de asociaci√≥n/correlaci√≥n {.tabset .tabset-fade .tabset-pills}

Para evaluar la posible relaci√≥n entre la respuesta completa patol√≥gica (RCP) y las caracter√≠sticas de los pacientes, se emplear√°n an√°lisis estad√≠sticos adecuados a la naturaleza de cada variable. En el caso de las variables cualitativas, como el tipo de tratamiento o el estadio del tumor, se utilizar√°n pruebas dise√±adas para comparar proporciones entre distintos grupos, como la prueba de Chi-cuadrado o, en situaciones donde el tama√±o de la muestra sea reducido, la prueba exacta de Fisher. Estas herramientas permiten determinar si existen diferencias significativas en la distribuci√≥n de estas caracter√≠sticas entre los pacientes que lograron o no una RCP.

Para las variables cuantitativas, como la edad del paciente o el √≠ndice de proliferaci√≥n tumoral Ki67, se aplicar√°n pruebas que permitan evaluar diferencias en valores num√©ricos entre los grupos analizados. La prueba t de Student se emplear√° para comparar los valores promedio de estas variables entre los pacientes con y sin RCP, mientras que los coeficientes de correlaci√≥n de Pearson o Spearman ayudar√°n a medir la intensidad y direcci√≥n de la relaci√≥n entre estas caracter√≠sticas y la RCP.

A trav√©s de estos an√°lisis se buscar√°n patrones o tendencias que puedan sugerir una asociaci√≥n entre las caracter√≠sticas cl√≠nicas y patol√≥gicas de los pacientes y su respuesta al tratamiento. Los resultados obtenidos contribuir√°n a una mejor comprensi√≥n de los factores que podr√≠an influir en la probabilidad de alcanzar una RCP, proporcionando informaci√≥n valiosa para optimizar estrategias terap√©uticas y mejorar la toma de decisiones cl√≠nicas.

### EDAD_DIAGNOSTICO

```{r}
detectar_asociacion(dataset_recodificado, "RCP","EDAD_DIAGNOSTICO")
```

### ESTADO_MENOPAUSICO

```{r}
detectar_asociacion(dataset_recodificado, "RCP","ESTADO_MENOPAUSICO")
```

### TAMA√ëO

```{r}
detectar_asociacion(dataset_recodificado, "RCP","TAMA√ëO")
```

### Tn

```{r}
detectar_asociacion(dataset_recodificado, "RCP","Tn")
```

### Nx

```{r}
detectar_asociacion(dataset_recodificado, "RCP","Nx")
```

### TIPO_CIRUGIA

```{r}
detectar_asociacion(dataset_recodificado, "RCP","TIPO_CIRUGIA")
```

### HT_ADY_OK

```{r}
detectar_asociacion(dataset_recodificado, "RCP","HT_ADY_OK")
```

### RE

```{r}
detectar_asociacion(dataset_recodificado, "RCP","RE")
```

### RP

```{r}
detectar_asociacion(dataset_recodificado, "RCP","RP")
```

### GRADO_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","GRADO_CAT")
```

### HISTOLOGIA_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","HISTOLOGIA_CAT")
```

### KI67_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","Ki67_CAT")
```

### FENOTIPO_IHQ_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","FENOTIPO_IHQ_CAT")
```

### ESTADIO_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","ESTADIO_CAT")
```

### QT_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","QT_CAT")
```

### No_ANTIBIOTICOS_CAT

```{r}
detectar_asociacion(dataset_recodificado, "RCP","No_ANTIBIOTICOS_CAT")
```

## An√°lisis multivariante

Se utilizar√°n m√©todos estad√≠sticos avanzados para analizar c√≥mo se relacionan varias variables entre s√≠ y cu√°les de ellas tienen mayor influencia sobre la probabilidad de que ocurra una respuesta completa patol√≥gica (RCP). En particular, se aplicar√° la regresi√≥n log√≠stica, una t√©cnica que permite predecir la probabilidad de que ocurra un evento (en este caso, la RCP) a partir de otras variables. Luego, se evaluar√° la importancia de cada una de estas variables en el modelo, analizando factores como la significancia de los coeficientes (qu√© tan fuertes son las relaciones) y la calidad del modelo en general para ver cu√°n bien est√° prediciendo la RCP.

```{r}
# Lista de variables independientes
variables_significativas <- c("EDAD_DIAGNOSTICO", "HT_ADY_OK", "RE", "RP", "FENOTIPO_IHQ_CAT", "TAMA√ëO", "QT_CAT", "Ki67_CAT")

variables_no_significativas <- c("No_ANTIBIOTICOS_CAT", "TIPO_CIRUGIA", "ESTADIO_CAT", "Tn", "Nx", "ESTADO_MENOPAUSICO", "GRADO_CAT", "HISTOLOGIA_CAT")

variables_mixtas <- c("HT_ADY_OK", "RE", "RP", "FENOTIPO_IHQ_CAT", "TAMA√ëO", "Ki67_CAT", "TIPO_CIRUGIA", "ESTADIO_CAT", "Tn", "Nx", "ESTADO_MENOPAUSICO", "GRADO_CAT")

# Llamada a la funci√≥n
resultados_mejores <- regresion_logistica_visual_combinada(data = dataset_recodificado, evento = "RCP", variables_significativas = variables_significativas,3,"auc")

resultados_mejores$resumen_modelos

# Curva ROC del mejor modelo
resultados_mejores$todos_los_resultados[[resultados_mejores$top_modelos_info$modelo[1]]]$grafico_roc

resultados_mejores$todos_los_resultados[[resultados_mejores$top_modelos_info$modelo[1]]]$matriz_confusion

# Llamada a la funci√≥n
resultados_peores <- regresion_logistica_visual_combinada(data = dataset_recodificado, evento = "RCP", variables_significativas = variables_no_significativas,3,"auc")

resultados_peores$resumen_modelos

# Curva ROC del mejor modelo
resultados_peores$todos_los_resultados[[resultados_peores$top_modelos_info$modelo[1]]]$grafico_roc

resultados_peores$todos_los_resultados[[resultados_peores$top_modelos_info$modelo[1]]]$matriz_confusion

# Llamada a la funci√≥n
resultados_mixtos <- regresion_logistica_visual_combinada(data = dataset_recodificado, evento = "RCP", variables_significativas = variables_mixtas,3,"auc")

resultados_mixtos$resumen_modelos

# Curva ROC del mejor modelo
resultados_mixtos$todos_los_resultados[[resultados_mixtos$top_modelos_info$modelo[1]]]$grafico_roc

resultados_mixtos$todos_los_resultados[[resultados_mixtos$top_modelos_info$modelo[1]]]$matriz_confusion

```

## An√°lisis de supervivencia

Se llev√≥ a cabo un an√°lisis de supervivencia global (SG) con el objetivo de evaluar el impacto del uso de antibi√≥ticos en pacientes con c√°ncer de mama tratadas con quimioterapia neoadyuvante. El tiempo de seguimiento se calcul√≥ como la diferencia en meses entre la fecha de inicio del tratamiento (FECHA_INICIO_QT) y la fecha del √∫ltimo control (FECHA_ULTIMO_CONTROL). El evento de inter√©s se defini√≥ como el fallecimiento de la paciente, codificado a partir de la variable ESTADO_ULTIMO_CONTROL (estado_SG = 1 si el estado es "MCE", y 0 en caso contrario). Se estimaron curvas de Kaplan-Meier para evaluar la supervivencia global en el total de pacientes y se compararon las curvas seg√∫n los subtipos moleculares del tumor (Luminal, HER2+, Triple Negativo), as√≠ como seg√∫n el uso de antibi√≥ticos durante el tratamiento. Para evaluar diferencias estad√≠sticas entre grupos se aplic√≥ el test de log-rank. Finalmente, se repiti√≥ el an√°lisis de supervivencia estratificado por subtipo molecular, comparando dentro de cada subtipo a las pacientes que recibieron antibi√≥ticos frente a las que no, con el fin de explorar si el efecto de los antibi√≥ticos sobre la supervivencia var√≠a seg√∫n el tipo biol√≥gico del c√°ncer.

```{r}
# Preparar los datos
datos_preparados <- preparar_datos_supervivencia(dataset_recodificado)

# Ejecutar el an√°lisis
resultados_sg <- analisis_supervivencia(datos_preparados)

# Mostrar los gr√°ficos
resultados_sg$global
resultados_sg$por_subtipo
resultados_sg$por_ab

# Mostrar resultados por subtipo

resultados_sg$por_subtipo_y_ab[["LUMINAL"]]
resultados_sg$por_subtipo_y_ab[["HER2"]]
resultados_sg$por_subtipo_y_ab[["TRIPLE NEGATIVO"]]
```

# Resumen y resultados destacables por apartado

*En este apartado se van a comentar aquellos aspectos que han sido determinantes en el estudio al igual que se va a resumir todo lo que se ha realizado de una manera m√°s visual*

## Estad√≠stica descriptiva

Entre todas las variables disponibles en el conjunto de datos, se han seleccionado las siguientes por su relevancia para el an√°lisis.

::: panel-tabset
## EDAD_DIAGNOSTICO

Edad en a√±os en la que se realiz√≥ el diagn√≥stico del c√°ncer.

## ESTADO_MENOPAUSICO

Estado menop√°usico de la paciente al momento del diagn√≥stico (premenop√°usica, menop√°usica o desconocido).

## HISTOLOGIA

Tipo histol√≥gico del tumor, seg√∫n clasificaci√≥n patol√≥gica.

## GRADO

Grado histol√≥gico del tumor.

## KI67_DICOT

Expresi√≥n del marcador de proliferaci√≥n celular Ki-67.

## FENOTIPO_IHQ

Clasificaci√≥n del tumor seg√∫n inmunohistoqu√≠mica.

## TAMA√ëO

Tama√±o del tumor en cent√≠metros.

## Tn

Clasificaci√≥n T del tumor.

## Nx

Estado ganglionar.

## ESTADIO

Estadio cl√≠nico del c√°ncer.

## TIPO_CIRUGIA

Tipo de cirug√≠a realizada.

## TIPO_QT_NEOADY_OK

Tipo de quimioterapia neoadyuvante administrada.

## RCP

Respuesta completa patol√≥gica tras el tratamiento.

## HT_ADY_OK

Hormonoterapia adyuvante recibida.

## RE Y RP

Receptores hormonales de estr√≥geno (RE) y progesterona (RP).

## RETRASOS

Indica si hubo o no retrasos.
:::

En primer lugar se ha procedido con el estudio individual de cada **variable de inter√©s** teniendo en cuenta tanto el tipo de variable como bien su resumen estad√≠stico que se ha acompa√±ado con representaciones gr√°ficas.

Las **variables num√©ricas** son las siguientes.

```{r}
DT::datatable(resultados_multi,
              extensions = 'Buttons',
              options = list(
                dom = 'Bfrtip',
                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                pageLength = 10,
                scrollY = "400px",
                scrollCollapse = TRUE,
                paging = TRUE
              ),
              rownames = FALSE,
              class = "display nowrap"
) %>%
  DT::formatStyle(
    columns = names(resultados_multi),
    backgroundColor = 'skyblue'
  )

```

Por otro lado, las **variables categ√≥ricas** son las siguientes.

```{r}
DT::datatable(resultados_categoricos,
              extensions = 'Buttons',
              options = list(
                dom = 'Bfrtip',
                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                pageLength = 10,
                scrollY = "400px",
                scrollCollapse = TRUE,
                paging = TRUE
              ),
              rownames = FALSE,
              class = "display nowrap"
) %>%
  DT::formatStyle(
    columns = names(resultados_categoricos),
    backgroundColor = 'skyblue'
  )
```

Algunos resultados visuales destacables de todas estas variables de inter√©s son de **RE**, **TAMA√ëO**, **ESTADO_MENOPAUSICO**, **HISTOLOGIA** y **KI67_DICOT**.

::: {style="display: flex; justify-content: center; gap: 10px; flex-wrap: wrap;"}
![Resultados de RE](Images/re.png){alt="Imagen 1" style="border-radius: 8px;" width="350"} ![TAMA√ëO](Images/tamano.png){alt="Imagen 2" style="border-radius: 8px;" width="350"} ![ESTADO MENOPAUSICO](Images/estado_menopausico.png){alt="Imagen 3" style="border-radius: 8px;" width="350"} ![HISTOLOGIA](Images/histologia.png){alt="Imagen 4" style="border-radius: 8px;" width="350"} ![KI67](Images/ki67dicot.png){alt="Imagen 5" style="border-radius: 8px;" width="350"}
:::

*Estas im√°genes se han generado gracias a la ayuda de una funci√≥n automatizada que creaba resultados gr√°ficos de las variables en funci√≥n del tipo de la variable.*

Para la variable **TAMA√ëO** cabe destacar que la ingente cantidad de valores at√≠picos supon√≠a que el histograma resultase algo impreciso en la muestra de resultados. Para esto tras la limpieza que tiene lugar en el siguiente apartado conseguimos el siguiente histograma.

```{r}
visualizar_variable(dataset_recodificado, "TAMA√ëO")
```

Ahora si podemos visualizar con una mayor claridad el "tama√±o est√°ndar" que prevalece y que es de 3 mm. Tambi√©n, podemos ver que el tipo histol√≥gico de mayor frecuencia en la variable **HISTOLOGIA** es *Ductal*. Adem√°s, se ve que la frecuencia de pacientes menop√°usicas y premenop√°usicas son similares, sin embargo, el marcador *AIP* es m√°s frecuente que *BIP*.

Las funciones utilizadas en este apartado son:\
- [Analizar tipo de variables](#Analizarvariables)

\- [Resumen estad√≠stico de variables num√©ricas](#Generalnumerico)

\- [Resumen estad√≠stico de variables categ√≥ricas](#Generalcategorico)

\- [Resultados visuales de cualquier variable](#Resultadosvisuales)

## Limpieza, filtrado, categorizaci√≥n y recodificaci√≥n

Una vez revisadas todas las variables relevantes, se eliminaron tanto los valores at√≠picos como los datos que estaban ausentes o incompletos. De esta forma pasamos de 700 muestras a 217.

Como paso final, se realizar√° el preprocesamiento de los datos, que consistir√° en la categorizaci√≥n y recodificaci√≥n de diversas variables con el objetivo de estratificar adecuadamente a la poblaci√≥n de estudio.

Se han creado variables categ√≥ricas nuevas a partir de las originales para simplificar la interpretaci√≥n. Los criterios utilizados han sido:

-   **GRADO_CAT**: agrupaci√≥n en dos categor√≠as:
    -   `1/2` ‚Üí Grado 1 o 2
    -   `3` ‚Üí Grado 3
-   **HISTOLOGIA_CAT**:
    -   `DUCTAL` ‚Üí Tumores ductales
    -   `NO DUCTAL` ‚Üí Todos los dem√°s tipos histol√≥gicos
-   **Ki67_CAT**:
    -   `<=14` ‚Üí Marcador Ki-67 menor o igual a 14%
    -   `>14` ‚Üí Mayor a 14%
-   **FENOTIPO_IHQ_CAT**:
    -   `LUMINAL` ‚Üí Fenotipos Luminal A o B
    -   `HER2` ‚Üí Tumores HER2 o Luminal-HER2
    -   `TRIPLE NEGATIVO` ‚Üí Resto
-   **ESTADIO_CAT**:
    -   `I` ‚Üí Estadio I, IA, IB
    -   `II` ‚Üí II, IIA, IIB
    -   `III` ‚Üí III, IIIA, IIIB, IIIC
-   **QT_CAT**:
    -   `NO antiHER2` ‚Üí Quimioterapia sin antiHER2
    -   `antiHER2` ‚Üí Combinaci√≥n con f√°rmacos antiHER2
    -   `INMUNO` ‚Üí Incluye inmunoterapia
-   **No_ANTIBIOTICOS**:
    -   `Una vez` ‚Üí 1 ciclo antibi√≥tico
    -   `Dos veces o m√°s` ‚Üí 2 o m√°s ciclos
-   **RCP**: respuesta completa patol√≥gica calculada a partir de RCB:
    -   `SI` ‚Üí RCB-0 o RCB-1
    -   `NO` ‚Üí RCB-2 o RCB-3

A continuaci√≥n, puede observar un breve resumen de los cambios logrados.

```{r}
 comparativa <- data.frame( Caracter√≠stica = c("N√∫mero de filas", "N√∫mero de columnas", "Variables tipo factor", "Variables tipo numeric", "Variables agrupadas", "Datos perdidos", "Valores at√≠picos", "Recodificaci√≥n de variables"), Original = c(700, 28, 22, 6, "Ninguna", "Presentes", "Presentes", "No"), Procesado = c(217, 31, 25, 6, "Ninguna", "Eliminados / imputados", "Eliminados", "S√≠") )

kable(comparativa, caption = "Comparaci√≥n entre dataset original y procesado")
```

Las funciones utilizadas en este apartado son:\
- [Detectar valores perdidos, imputarlos y detectar valores at√≠picos](#Imputacion)

\- [Categorizar y recodificar las variables para estratificar adecuadamente](Categorizacion)

## An√°lisis de asociaci√≥n/correlaci√≥n

Se analizaron las posibles asociaciones entre la respuesta completa patol√≥gica (RCP) y las distintas variables cl√≠nicas y terap√©uticas del estudio. Para ello, se aplicaron pruebas estad√≠sticas adecuadas seg√∫n el tipo de variable, identific√°ndose relaciones significativas en varios casos. Este an√°lisis permiti√≥ detectar patrones que podr√≠an estar relacionados con una mejor o peor respuesta al tratamiento. Adem√°s, se implement√≥ una funci√≥n automatizada que facilit√≥ el an√°lisis sistem√°tico entre pares de variables, permitiendo construir una matriz de correlaci√≥n que resume visualmente las principales asociaciones observadas en la cohorte. Cabe destacar que aquellas variables que **fueron anteriormente recodificadas**, son las que se han utilizado en este caso para el an√°lisis.

Tras el estudio, se han comprobado que de las **16** variables analizadas, solamente la mitad constituye el grupo de variables con mayor evidencia estad√≠stica. Entre estas encontramos **FENOTIPO_IHQ_CAT**, **HT_ADY_OK**, **QT_CAT**, **RE**...

Por otro lado, en el grupo que incluye a las variables que no parecen presentar relaci√≥n significativa con la variable evento est√°n **TIPO_CIRUGIA**, **GRADO_CAT**, **ESTADO_MENOPAUSICO**, **No_ANTIBIOTICOS_CAT**...

Es cierto que estos resultados pueden verse perjudicados por el uso de Fisher (simulado) dado que supon√≠a mucho esfuerzo para el equipo y el programa el realizar el test completo. Por ende, aquellas variables que se consideren convenientes van a ser utilizadas para el an√°lisis multivariante.

Aqu√≠ se pueden ver algunas gr√°ficas visuales que representan las distintas asociaciones.

::: {style="display: flex; justify-content: center; gap: 10px; flex-wrap: wrap;"}
![Imagen 1](Images/fenotipo.png){alt="Imagen 1" style="border-radius: 8px;" width="350"} ![Imagen 2](Images/qt.png){alt="Imagen 2" style="border-radius: 8px;" width="350"} ![Imagen 3](Images/tipocirugia.png){alt="Imagen 3" style="border-radius: 8px;" width="350"} ![Imagen 4](Images/noantibioticos.png){alt="Imagen 4" style="border-radius: 8px;" width="350"}
:::

Dados estos mapas de calor podemos comprobar, por ejemplo, que el tipo de fenotipo *Luminal* se relaciona para los casos negativos de la variable de evento, mientras que *Her2* se relaciona con los casos positivos. Tambi√©n, vemos como para el tipo de cirug√≠a no est√° tan claro la asociaci√≥n dado que se da de forma proporcional la misma situaci√≥n tanto para las *cirug√≠as conservadoras* como *radicales*.

Para resumir los resultados obtenidos puede consultar las siguientes tablas que representan a las variables con asociaci√≥n significativa en primer lugar y sin en segundo lugar.

```{r}
kable(
  data.frame(
    Variable = c(
      "FENOTIPO_IHQ_CAT", "HT_ADY_OK", "QT_CAT",
      "RE", "RP", "Ki67_CAT", "EDAD_DIAGNOSTICO", "TAMA√ëO"
    ),
    Tipo = c(
      "Categ√≥rica", "Categ√≥rica", "Categ√≥rica",
      "Num√©rica", "Num√©rica", "Categ√≥rica", "Num√©rica", "Num√©rica"
    ),
    `Test estad√≠stico` = c(
      "Chi-cuadrado", "Fisher", "Fisher",
      "Spearman", "Spearman", "Fisher", "Spearman", "Spearman"
    ),
    `p-valor` = c(
      "2.4e-07", "0.0005", "0.0005",
      "1.18e-06", "0.0003", "0.0152", "0.0109", "0.015"
    ),
    Asociaci√≥n = c(
      "Fuerte", "Fuerte", "Fuerte",
      "Negativa (rho = -0.32)", "Negativa (rho = -0.24)", 
      "Positiva (OR ‚âà 3.81)", "Negativa (rho = -0.17)", "Negativa (rho = -0.16)"
    )
  ),
  caption = "Tabla 1. Variables con asociaci√≥n estad√≠sticamente significativa con RCP.",
  align = "lcccl"
)

kable(
  data.frame(
    Variable = c(
      "No_ANTIBIOTICOS_CAT", "TIPO_CIRUGIA", "ESTADIO_CAT", "Tn", 
      "Nx", "ESTADO_MENOPAUSICO", "GRADO_CAT", "HISTOLOGIA_CAT"
    ),
    Tipo = c(
      "Categ√≥rica", "Categ√≥rica", "Categ√≥rica", "Categ√≥rica", 
      "Categ√≥rica", "Categ√≥rica", "Categ√≥rica", "Categ√≥rica"
    ),
    `Test estad√≠stico` = c(
      "Chi-cuadrado", "Fisher", "Chi-cuadrado", "Chi-cuadrado",
      "Fisher", "Fisher", "Chi-cuadrado", "Chi-cuadrado"
    ),
    `p-valor` = c(
      "1", "0.884", "0.560", "0.411", 
      "0.137", "0.103", "0.263", "0.195"
    ),
    Comentario = c(
      "Sin asociaci√≥n alguna", "Muy baja asociaci√≥n", "Baja", "Baja",
      "Baja", "Ligeramente no significativa", "No significativa", "No significativa"
    )
  ),
  caption = "Tabla 2. Variables sin asociaci√≥n estad√≠sticamente significativa con RCP.",
  align = "lcccl"
)
```

La funci√≥n utilizada en este apartado es:\
- [Analizar asociaci√≥n/correlaci√≥n entre variable evento y otra](#Asociacion)

## An√°lisis multivariante

Se emplear√°n t√©cnicas de an√°lisis multivariante, concretamente regresi√≥n log√≠stica, con el objetivo de identificar los factores que se asocian de forma independiente con la obtenci√≥n de respuesta completa patol√≥gica (RCP). Este modelo permitir√° estimar la probabilidad de RCP en funci√≥n de diversas variables cl√≠nicas y terap√©uticas. Se evaluar√° la significancia estad√≠stica de cada predictor, as√≠ como la capacidad explicativa del modelo mediante m√©tricas como la bondad de ajuste y la discriminaci√≥n, lo que permitir√° valorar su utilidad en la predicci√≥n del evento.

Tras haber creado modelos como uno con las variables consideradas **altamente significativas**, otro con las **no significativas** u otro con variables mezcladas, se ha considerado el m√°s √≥ptimo aquel que conten√≠a una mezcla de ambos grupos. La funci√≥n automatizada que se ha implementado, estudiaba recombinaciones de variables para crear modelos diferentes y se acababa quedando con los 3 mejores modelos por el argumento dado que especificaba el n√∫mero de mejores modelos y seg√∫n el *AUC*.

El mejor modelo se compone de las variables **HT_ADY_OK**, **RE**, **RP**, **FENOTIPO_IHQ_CAT**, **TAMA√ëO**, **Ki67_CAT**, **ESTADIO_CAT**, **Tn**, **Nx** y **GRADO_CAT**.

```{r}
mejores_modelos <- data.frame(
  Modelo = c("Accuracy247", "Accuracy253", "Accuracy4027"),
  Variables = c(
    "EDAD_DIAGNOSTICO, HT_ADY_OK, RE, RP, FENOTIPO_IHQ_CAT, TAMA√ëO, Ki67_CAT",
    "TIPO_CIRUGIA, ESTADIO_CAT, Tn, Nx, ESTADO_MENOPAUSICO, GRADO_CAT, HISTOLOGIA_CAT",
    "HT_ADY_OK, RE, RP, FENOTIPO_IHQ_CAT, TAMA√ëO, Ki67_CAT, ESTADIO_CAT, Tn, Nx, GRADO_CAT"
  ),
  AUC = c(0.845, 0.741, 0.854),
  Exactitud = c(0.759, 0.702, 0.774),
  Sensibilidad = c(0.600, 0.406, 0.624),
  Especificidad = c(0.863, 0.855, 0.871),
  F1 = c(0.662, 0.481, 0.684)
)

kable(mejores_modelos, caption = "Resumen de los mejores modelos de regresi√≥n log√≠stica", format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
```

```{r}
# Curva ROC del mejor modelo
resultados_mixtos$todos_los_resultados[[resultados_mixtos$top_modelos_info$modelo[1]]]$grafico_roc

resultados_mixtos$todos_los_resultados[[resultados_mixtos$top_modelos_info$modelo[1]]]$matriz_confusion
```

Con un *0.854* de **AUC**, se explica que el modelo distingue muy bien entre pacientes que tuvieron RCP y los que no. Tambi√©n, el *77.4*% de las predicciones totales son correctas. Reconoce mejor a los pacientes que **no** tuvieron RCP que los que **s√≠** y esto puede deberse al muy peque√±o desequilibro de clases en la variable evento ya que esta tiene *132* casos de **NO** frente a *85*casos de **SI**. Finalmente, al no ser grande el desequilibrio, el **F1-score** con un valor de *0.684* resulta mostrar un buen equilibrio entre **exactitud** y **sensibilidad**.

La funci√≥n utilizada en este apartado es:\
- [Realizar la regresi√≥n log√≠stica](#Regresion)

## An√°lisis de supervivencia

En este estudio se analiz√≥ si el uso de antibi√≥ticos durante el tratamiento influye en la supervivencia de pacientes con c√°ncer de mama que recibieron quimioterapia antes de la cirug√≠a. Para ello, se calcul√≥ cu√°nto tiempo vivieron las pacientes desde el inicio del tratamiento hasta el √∫ltimo seguimiento, y se compar√≥ la supervivencia entre distintos grupos. Se estudiaron tanto los diferentes tipos biol√≥gicos del tumor como si las pacientes hab√≠an tomado antibi√≥ticos o no. Adem√°s, se explor√≥ si el efecto de los antibi√≥ticos sobre la supervivencia cambiaba seg√∫n el tipo de tumor. Para las comparaciones se utilizaron m√©todos estad√≠sticos espec√≠ficos que permiten visualizar y contrastar las diferencias en supervivencia entre grupos.\

![Supervivencia Global](Images/supGlobal.png "Supervivencia Global"){fig-align="center"}

La probabilidad de supervivencia en la cohorte disminuye de manera progresiva y acentuada, especialmente a partir de los 270 meses de seguimiento, mostrando una tendencia que se aproxima a un descenso exponencial. Sin embargo, entre los 100 y 200 meses, la probabilidad a√∫n se mantiene relativamente alta, oscilando entre 1 y 0.75.

![Supervivencia por Subtipo](Images/subSubtipo.png){fig-align="center"}

En el an√°lisis por subtipos moleculares, las pacientes con tumores **Luminal** experimentan una disminuci√≥n brusca en la probabilidad de supervivencia alrededor de los 300 meses. En contraste, el subtipo **HER2+** mantiene una probabilidad de supervivencia elevada, con valores que permanecen entre 1 y 0.75 a lo largo del tiempo analizado. Por su parte, el subtipo **Triple Negativo** muestra una ca√≠da m√°s pronunciada en la probabilidad a partir de los 100 meses, aunque esta se mantiene por encima de 0.75 hasta aproximadamente los 250 meses, momento en el que desciende hasta 0.5 y alcanza un valor ligeramente superior a 0.25 en torno a los 300 meses.

![Supervivencia por uso de antibi√≥ticos](Images/subUsoAnt.png){fig-align="center"}

En cuanto al uso de antibi√≥ticos, se observa que las pacientes que **no recibieron antibi√≥ticos** mantienen una probabilidad de supervivencia relativamente estable, que no desciende por debajo de 0.6 durante el per√≠odo de seguimiento. En cambio, aquellas que **s√≠ recibieron antibi√≥ticos** presentan una disminuci√≥n gradual en la probabilidad de supervivencia, que se acent√∫a cerca de los 300 meses, momento en el cual la probabilidad cae bruscamente hasta alcanzar un valor pr√≥ximo a 0.

![Supervivencia por uso de antibi√≥ticos al tener HER2+](Images/subAntHer2.png){fig-align="center"}

Al analizar espec√≠ficamente el subtipo **HER2+**, se observa que las pacientes que **no fueron tratadas con antibi√≥ticos** mantienen una probabilidad de supervivencia constante de 1 durante todo el seguimiento. Por otro lado, aquellas que **s√≠ recibieron antibi√≥ticos** muestran una probabilidad algo menor, situ√°ndose por encima de 0.75 antes de los 200 meses y manteni√©ndose estable en torno a 0.75 a partir de ese punto.

Las funciones utilizadas en este apartado son:\
- [Preparar los datos para supervivencia](#Preparar)

\- [Realizar el an√°lisis de supervivencia](#Supervivencia)

# Conclusiones finales

Los resultados obtenidos en este an√°lisis de supervivencia sugieren que el uso de antibi√≥ticos durante el tratamiento con quimioterapia neoadyuvante podr√≠a estar asociado a una menor probabilidad de supervivencia en pacientes con c√°ncer de mama, especialmente en determinados subgrupos biol√≥gicos como HER2+ y triple negativo. Estos hallazgos refuerzan la hip√≥tesis de que la alteraci√≥n de la microbiota ‚Äîpotencialmente inducida por la administraci√≥n de antibi√≥ticos‚Äî podr√≠a tener un impacto relevante en la eficacia de las terapias oncol√≥gicas y, en √∫ltima instancia, en la evoluci√≥n cl√≠nica de las pacientes.

Adem√°s, las diferencias observadas entre subtipos moleculares subrayan la necesidad de considerar el perfil biol√≥gico del tumor a la hora de valorar el riesgo asociado al uso de antibi√≥ticos durante el tratamiento oncol√≥gico. Esto sugiere que las decisiones cl√≠nicas relacionadas con la prescripci√≥n de antimicrobianos deber√≠an realizarse con cautela, y en lo posible bajo un criterio de indicaci√≥n estrictamente necesario, especialmente en el contexto de la quimioterapia.

Por otro lado, estos resultados tambi√©n ponen de relieve la importancia de integrar el control de infecciones, la evaluaci√≥n del estado inmunol√≥gico y la vigilancia de la microbiota intestinal como factores relevantes en el manejo integral de las pacientes con c√°ncer. En un futuro, este enfoque podr√≠a abrir la puerta a estrategias de soporte que busquen minimizar el impacto de los antibi√≥ticos o restaurar la microbiota, como el uso de probi√≥ticos o transplantes fecales, siempre dentro de un marco de evidencia cient√≠fica robusta.

Finalmente, aunque este an√°lisis no permite establecer relaciones causales definitivas, s√≠ plantea interrogantes cl√≠nicamente relevantes que justifican la necesidad de realizar estudios prospectivos que analicen de forma m√°s controlada el impacto de los antibi√≥ticos en la supervivencia, considerando la biolog√≠a del tumor, las comorbilidades y la composici√≥n de la microbiota como posibles factores moduladores.

# Librerias y funciones utilizadas {.tabset .tabset-fade .tabset-pills}

::: {.alert .alert-info}
| Librer√≠a   | Motivo de la adici√≥n                                                                                                                                     |
|:---------------------------------------|:-------------------------------|
| knitr      | Crea reportes din√°micos combinando c√≥digo y resultados                                                                                                   |
| readxl     | Lee archivos Excel                                                                                                                                       |
| skimr      | Proporciona res√∫menes r√°pidos de datasets                                                                                                                |
| dplyr      | Facilita la manipulaci√≥n de datos                                                                                                                        |
| DT         | Crea tablas interactivas para explorar datos                                                                                                             |
| ggplot2    | Genera gr√°ficos avanzados y personalizables                                                                                                              |
| gridExtra  | Organiza m√∫ltiples gr√°ficos en una sola p√°gina                                                                                                           |
| tidyr      | Trata valores perdidos                                                                                                                                   |
| reshape2   | Reorganiza el dataframe                                                                                                                                  |
| stats      | Realiza an√°lisis estad√≠sticos                                                                                                                            |
| corrplot   | Visualiza la matriz de correlaci√≥n entre variables num√©ricas                                                                                             |
| caret      | Para la creaci√≥n y evaluaci√≥n de modelos de aprendizaje autom√°tico en R.                                                                                 |
| pROC       | Proporciona herramientas para la evaluaci√≥n y visualizaci√≥n de modelos de clasificaci√≥n mediante la curva ROC y el c√°lculo del √°rea bajo la curva (AUC). |
| kableExtra | Mejora y embellece las tablas generadas con kable() del paquete knitr.                                                                                   |
| survival   | Realizar an√°lisis de supervivencia, como el c√°lculo de curvas de Kaplan-Meier, la estimaci√≥n de modelos de riesgos proporcionales de Cox, entre otros.   |
| survminer  | Mejora la visualizaci√≥n de los resultados obtenidos con el paquete `survival`.                                                                           |
| lubridate  | Facilita la manipulaci√≥n y el an√°lisis de fechas y horas.                                                                                                |
| purrr      | Itera de forma elegante y funcional sobre listas o vectores en R, evitando bucles `for.`                                                                 |
:::

A continuaci√≥n podr√° ver todas y cada unas de las funciones utilizadas para el estudio que se ha llevado a cabo.

## Analizar tipo de variable {#Analizarvariables}

```{r}
analizar_variables <- function(data, variables_interes) {
  
  # Crear listas vac√≠as para almacenar variables seg√∫n condici√≥n
  vars_numericas <- list()
  vars_categoricas <- list()
  
  # Iterar sobre cada variable en la lista de inter√©s
  for (variable in variables_interes) {
    
    # Verificar si la variable existe en el dataset
    if (!(variable %in% colnames(data))) {
      message(paste("‚ö†Ô∏è Advertencia: La variable", variable, "no est√° en el dataset."))
      next  # Pasar a la siguiente variable
    }
    
    # Si la variable es num√©rica, agregarla a la lista de num√©ricas
    if (is.numeric(data[[variable]])) {
      vars_numericas[[variable]] <- data[[variable]]
    }
    
    # Si la variable es categ√≥rica (factor o character), agregarla a la lista de categ√≥ricas
    if (is.character(data[[variable]]) || is.factor(data[[variable]])) {
      vars_categoricas[[variable]] <- as.factor(data[[variable]])  # Convertir a factor si es character
    }
  }
  
  # Devolver ambas listas en un solo objeto
  return(list(Numericas = vars_numericas, Categoricas = vars_categoricas))
}
```

## An√°lisis estad√≠stico general de variables num√©ricas {#Generalnumerico}

```{r}
# Funci√≥n para analizar m√∫ltiples variables en un dataset
analizar_variables_df <- function(data, variables) {
  
  # Verificar que las variables existan en el dataset
  variables_existentes <- variables[variables %in% colnames(data)]
  
  if (length(variables_existentes) == 0) {
    stop("Ninguna de las variables especificadas est√° en el dataset.")
  }
  
  # Lista para almacenar los resultados
  resultados_list <- list()
  
  # Iterar sobre cada variable
  for (variable in variables_existentes) {
    
      # Extraer estad√≠sticas
      resumen <- summary(data[[variable]], na.rm = TRUE)
      
      # Crear DataFrame con estad√≠sticas
      df_resumen <- data.frame(
        Variable = variable,
        Min = as.numeric(resumen[1]),  
        Q1 = as.numeric(resumen[2]),
        Mediana = as.numeric(resumen[3]),
        Media = mean(data[[variable]], na.rm = TRUE),
        Q3 = as.numeric(resumen[5]),
        Max = as.numeric(resumen[6]),
        Varianza = var(data[[variable]], na.rm = TRUE),
        Desviacion = sd(data[[variable]], na.rm = TRUE)
      )
    
    # Agregar resultados a la lista
    resultados_list[[variable]] <- df_resumen
  }
  
  # Unir todos los resultados en un √∫nico dataframe
  resultados_final <- bind_rows(resultados_list)
  
  return(resultados_final)  # Devolver DataFrame final
}
```

## An√°lisis estad√≠stico general de variables categ√≥ricas {#Generalcategorico}

```{r}
# Funci√≥n para analizar variables categ√≥ricas en un dataset y devolver un datatable interactivo
analizar_variables_categoricas <- function(data, variables) {
  
  # Verificar que las variables existan en el dataset
  variables_existentes <- variables[variables %in% colnames(data)]
  
  if (length(variables_existentes) == 0) {
    stop("Ninguna de las variables especificadas est√° en el dataset.")
  }
  
  # Lista para almacenar los resultados
  resultados_list <- list()
  
  # Iterar sobre cada variable categ√≥rica
  for (variable in variables_existentes) {
    
    if (is.factor(data[[variable]]) | is.character(data[[variable]])) {
      # üìä Si es variable categ√≥rica (factor o car√°cter)
      
      # Frecuencia absoluta de las categor√≠as
      freq_abs <- table(data[[variable]], useNA = "ifany")
      
      # Frecuencia relativa
      freq_rel <- prop.table(freq_abs) * 100
      
      # Moda (categor√≠a m√°s frecuente)
      moda <- names(freq_abs)[which.max(freq_abs)]
      
      # N√∫mero de categor√≠as distintas
      n_categorias <- length(freq_abs)
      
      # Crear DataFrame con estad√≠sticas categ√≥ricas
      df_resumen <- data.frame(
        Variable = variable,
        `N√∫mero de Categor√≠as` = n_categorias,
        `Moda` = moda,
        `Frecuencia Absoluta` = paste(names(freq_abs), ":", freq_abs, collapse = ", "),
        `Frecuencia Relativa (%)` = paste(names(freq_rel), ":", round(freq_rel, 2), collapse = ", ")
      )
    } else {
      next  # Si la variable no es categ√≥rica, se omite
    }
    
    # Agregar resultados a la lista
    resultados_list[[variable]] <- df_resumen
  }
  
  # Unir todos los resultados en un √∫nico dataframe
  resultados_final <- bind_rows(resultados_list)
  
  # Devolver el resultado como un datatable interactivo
  library(DT)
  return(datatable(resultados_final, options = list(pageLength = 3)))
}

```

## Resultados visuales de cualquier variable {#Resultadosvisuales}

```{r}
visualizar_variable <- function(data, variable) {
  if (is.numeric(data[[variable]])) {
    # Si es num√©rica: Histograma y Boxplot
    # Ajustar el binwidth del histograma seg√∫n el rango de la variable
    rango <- range(data[[variable]], na.rm = TRUE)
    binwidth <- (rango[2] - rango[1]) / 30  # Establece el binwidth de manera autom√°tica
    
    p1 <- ggplot(data, aes(x = !!sym(variable))) +
      geom_histogram(binwidth = binwidth, fill = "tomato", color = "black") +
      theme_minimal() +
      labs(title = paste("Histograma de", variable), x = variable, y = "Frecuencia") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas para mejor visualizaci√≥n
    
    p2 <- ggplot(data, aes(y = !!sym(variable))) +
      geom_boxplot(fill = "gold", color = "black") +
      theme_minimal() +
      labs(title = paste("Boxplot de", variable), y = variable) +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
    
    grid.arrange(p1, p2, ncol = 2)
    
  } else {
    # üìä Si es categ√≥rica: Gr√°fico de barras y Pie Chart
    p1 <- ggplot(data, aes(x = !!sym(variable))) +
      geom_bar(fill = "steelblue", color = "black") +
      theme_minimal() +
      labs(title = paste("Distribuci√≥n de", variable), x = variable, y = "Frecuencia") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
    
    p2 <- ggplot(data, aes(x = "", fill = !!sym(variable))) +
      geom_bar(width = 1) +
      coord_polar("y") +
      theme_void() +
      labs(title = paste("Distribuci√≥n de", variable))
    
    grid.arrange(p1, p2, ncol = 2)
  }
}

```

## Detectar valores perdidos, imputarlos y detectar valores at√≠picos {#Imputacion}

```{r}
procesar_datos <- function(data, variables_interes) {
  # Eliminar filas con "Desconocido" en cualquier variable
  data <- data %>% filter(if_all(everything(), ~ . != "Desconocido"))
  
  # Filtrar valores espec√≠ficos no v√°lidos
  if ("EDAD_DIAGNOSTICO" %in% colnames(data)) {
    data <- data %>% filter(EDAD_DIAGNOSTICO != 999)
  }
  if ("Nx" %in% colnames(data)) {
    data <- data %>% filter(Nx != 999)
  }
  if ("TAMA√ëO" %in% colnames(data)) {
    data <- data %>% filter(TAMA√ëO != 999)
  }
  
  # Imputaci√≥n de valores perdidos
  for (var in variables_interes) {
    if (var %in% colnames(data)) {
      if (is.numeric(data[[var]])) {
        data[[var]][is.na(data[[var]])] <- mean(data[[var]], na.rm = TRUE)
      } else if (is.factor(data[[var]]) || is.character(data[[var]])) {
        moda <- names(which.max(table(data[[var]])))
        data[[var]][is.na(data[[var]])] <- moda
      }
    }
  }
  
  # Detecci√≥n y eliminaci√≥n de valores at√≠picos
  for (var in variables_interes) {
    if (var %in% colnames(data) && is.numeric(data[[var]])) {
      Q1 <- quantile(data[[var]], 0.25, na.rm = TRUE)
      Q3 <- quantile(data[[var]], 0.75, na.rm = TRUE)
      IQR <- Q3 - Q1
      limite_inferior <- Q1 - 1.5 * IQR
      limite_superior <- Q3 + 1.5 * IQR
      data <- data %>% filter(data[[var]] >= limite_inferior & data[[var]] <= limite_superior)
    }
  }
  
  # Seleccionar solo las variables de inter√©s
  data <- data %>% select(all_of(variables_interes))
  
  return(data)
}

```

## Categorizar y recodificar las variables para estratificar adecuadamente {#Categorizacion}

```{r}
# Funci√≥n para preprocesar el dataset
preprocesar_datos <- function(data) {
  
  # Verificar si las columnas existen antes de modificarlas
  if ("GRADO" %in% colnames(data)) {
    data <- data %>%
      mutate(GRADO_CAT = case_when(
        GRADO %in% c(1, 2) ~ "1/2",
        GRADO == 3 ~ "3",
        TRUE ~ NA_character_
      )) %>%
      mutate(GRADO_CAT = as.factor(GRADO_CAT))
  }
  
  if ("HISTOLOGIA" %in% colnames(data)) {
    data <- data %>%
      mutate(HISTOLOGIA_CAT = case_when(
        HISTOLOGIA == "DUCTAL" ~ "DUCTAL",
        TRUE ~ "NO DUCTAL"
      )) %>%
      mutate(HISTOLOGIA_CAT = as.factor(HISTOLOGIA_CAT))
  }
  
  if ("Ki67" %in% colnames(data)) {
    data <- data %>%
      mutate(Ki67_CAT = case_when(
        Ki67 <= 14 ~ "<=14",
        Ki67 > 14 ~ ">14",
        TRUE ~ NA_character_
      )) %>%
      mutate(Ki67_CAT = as.factor(Ki67_CAT))
  }
  
  if ("FENOTIPO_IHQ" %in% colnames(data)) {
    data <- data %>%
      mutate(FENOTIPO_IHQ_CAT = case_when(
        FENOTIPO_IHQ %in% c("LUMINAL A", "LUMINAL B") ~ "LUMINAL",
        FENOTIPO_IHQ %in% c("LUMINAL-HER2", "HER2") ~ "HER2",
        TRUE ~ "TRIPLE NEGATIVO"
      )) %>%
      mutate(FENOTIPO_IHQ_CAT = as.factor(FENOTIPO_IHQ_CAT))
  }
  
  if ("ESTADIO" %in% colnames(data)) {
    data <- data %>%
      mutate(ESTADIO_CAT = case_when(
        ESTADIO %in% c("I", "IA", "IB") ~ "I",
        ESTADIO %in% c("II", "IIA", "IIB") ~ "II",
        ESTADIO %in% c("III", "IIIA", "IIIB", "IIIC") ~ "III",
        TRUE ~ NA_character_
      )) %>%
      mutate(ESTADIO_CAT = as.factor(ESTADIO_CAT))
  }
  
  if ("TIPO_QT_NEOADY_OK" %in% colnames(data)) {
    data <- data %>%
      mutate(QT_CAT = case_when(
        TIPO_QT_NEOADY_OK %in% c("ANTRACICLINAS", "ANTRACICLINAS-TAXANOS", "ANTRACICLINAS-TAXANOS-PLATINOS", "TAXANOS") ~ "NO antiHER2",
        TIPO_QT_NEOADY_OK %in% c("QUIMIOTERAPIA-ANTIHER2", "QUIMIOTERAPIA-ANTIHER2DOBLE") ~ "antiHER2",
        TIPO_QT_NEOADY_OK %in% c("QUIMIOTERAPIA-ANTIHER2-INMUNOTERAPIA", "QUIMIOTERAPIA-INMUNOTERAPIA") ~ "INMUNO",
        TRUE ~ NA_character_
      )) %>%
      mutate(QT_CAT = as.factor(QT_CAT))
  }
  
  if ("No_ANTIBIOTICOS" %in% colnames(data)) {
    data <- data %>%
      mutate(No_ANTIBIOTICOS_CAT = case_when(
        No_ANTIBIOTICOS == 1 ~ "Una vez",
        No_ANTIBIOTICOS >= 2 ~ "Dos veces o m√°s",
        TRUE ~ NA_character_
      )) %>%
      mutate(No_ANTIBIOTICOS_CAT = as.factor(No_ANTIBIOTICOS_CAT))
  }
  
  if ("RCB" %in% colnames(data)) {
    data <- data %>%
      mutate(RCP = case_when(
        RCB %in% c("RCB-0", "RCB-I") ~ "SI",
        RCB %in% c("RCB-II", "RCB-III") ~ "NO",
        TRUE ~ NA_character_
      )) %>%
      mutate(RCP = as.factor(RCP))
  }
  
  return(data)
}
```

## Analizar asociaci√≥n/correlaci√≥n entre variable evento y otra {#Asociacion}

```{r}
detectar_asociacion <- function(data, evento, variable) {
  
  # Analizar la relaci√≥n con la variable evento (RCP)
  cat("\n Analizando relaci√≥n entre", evento, "y", variable, "\n")
  
  # Convertir la variable 'evento' a factor si no lo es
  data <- data %>% mutate(across(all_of(evento), as.factor))
  
  # Para variables num√©ricas
  if (is.numeric(data[[variable]])) {
    cat("\n (Variable num√©rica)\n")
    
    # Prueba de normalidad con Shapiro-Wilk
    if (nrow(data) >= 50) {
      normalidad <- shapiro.test(data[[variable]])
      es_normal <- normalidad$p.value > 0.05
      cat("\n Prueba de normalidad (Shapiro-Wilk): p-value =", normalidad$p.value, "\n")
    } else {
      es_normal <- FALSE
    }

    # Si hay exactamente dos grupos en la variable evento, considerar prueba t
    if (length(levels(data[[evento]])) == 2 && es_normal) {
      t_test <- t.test(data[[variable]] ~ data[[evento]])
      cat("\n Resultado de la prueba t de Student (dos grupos, distribuci√≥n normal):\n")
      print(t_test)
    } else {
      # Si no, usar correlaci√≥n (Spearman o Pearson seg√∫n normalidad)
      metodo_cor <- ifelse(es_normal, "pearson", "spearman")
      cor_test_result <- cor.test(data[[variable]], as.numeric(as.factor(data[[evento]])), method = metodo_cor)
      cat("\n Resultado de la prueba de correlaci√≥n (", metodo_cor, "):\n")
      print(cor_test_result)
    }
    
    # Visualizaci√≥n con boxplot
    p <- ggplot(data, aes(x = .data[[evento]], y = .data[[variable]], fill = .data[[evento]])) +
      geom_boxplot() +
      theme_minimal() +
      labs(title = paste("Distribuci√≥n de", variable, "por", evento), x = evento, y = variable)
    print(p)
    
  } 
  
  # Para variables categ√≥ricas
  else if (is.factor(data[[variable]]) || is.character(data[[variable]])) {
    cat("\n (Variable categ√≥rica)\n")
    
    # Asegurarse de que ambas variables sean factores
    data <- data %>%
      mutate(across(c(all_of(evento), all_of(variable)), as.factor))
    
    # Crear tabla de contingencia
    tabla <- table(data[[evento]], data[[variable]])
    
    # Realizar la prueba de Chi-cuadrado o Fisher
    if (any(tabla < 5)) {
      test_result <- fisher.test(tabla, simulate.p.value = TRUE)
      cat("\n Se utiliz√≥ la prueba exacta de Fisher debido a frecuencias esperadas menores a 5.\n")
    } else {
      test_result <- chisq.test(tabla)
      cat("\n Se utiliz√≥ la prueba de Chi-cuadrado.\n")
    }
    
    # Imprimir el resultado de la prueba
    print(test_result)
    
    # Visualizaci√≥n con mapa de calor
    p <- ggplot(as.data.frame(tabla), aes(x = Var2, y = Var1, fill = Freq)) +
      geom_tile() +
      scale_fill_gradient(low = "white", high = "blue") +
      theme_minimal() +
      labs(title = paste("Mapa de calor entre", evento, "y", variable), x = variable, y = evento)
    
    print(p)
  }
  
  # Si la variable no es num√©rica ni categ√≥rica
  else {
    cat("\n No se pudo determinar el tipo de variable para el an√°lisis.")
  }
}
```

## Realizar la regresi√≥n log√≠stica {#Regresion}

```{r}
regresion_logistica_visual_combinada <- function(data, evento, variables_significativas, top_n = 5, ordenar_por = "auc") {
  
  library(tidyverse)
  library(pROC)
  library(caret)
  library(knitr)
  library(kableExtra)
  
  # Limpieza
  data <- data %>%
    drop_na(all_of(c(evento, variables_significativas))) %>%
    mutate(across(all_of(evento), ~factor(.x, levels = c("NO", "SI"))))
  
  # Combinaciones
  combinaciones <- unlist(lapply(1:length(variables_significativas), function(x) {
    combn(variables_significativas, x, simplify = FALSE)
  }), recursive = FALSE)
  
  resultados <- list()
  resumen_modelos <- data.frame()
  
  for (combinacion in combinaciones) {
    
    nombre_modelo <- paste(combinacion, collapse = "_")
    formula_logistica <- as.formula(paste(evento, "~", paste(combinacion, collapse = " + ")))
    modelo <- glm(formula_logistica, data = data, family = binomial)
    
    prob <- predict(modelo, type = "response")
    pred <- factor(ifelse(prob > 0.5, "SI", "NO"), levels = c("NO", "SI"))
    
    matriz <- confusionMatrix(pred, data[[evento]], positive = "SI")
    
    auc_valor <- auc(roc(data[[evento]], prob))
    exactitud <- matriz$overall["Accuracy"]
    sensibilidad <- matriz$byClass["Sensitivity"]
    especificidad <- matriz$byClass["Specificity"]
    f1 <- matriz$byClass["F1"]
    
    # Guardar resumen en un data.frame
    resumen_modelos <- rbind(
      resumen_modelos,
      data.frame(
        modelo = nombre_modelo,
        variables = paste(combinacion, collapse = ", "),
        auc = round(auc_valor, 3),
        exactitud = round(exactitud, 3),
        sensibilidad = round(sensibilidad, 3),
        especificidad = round(especificidad, 3),
        f1 = round(f1, 3),
        stringsAsFactors = FALSE
      )
    )
    
    # Guardar resultados completos
    resultados[[nombre_modelo]] <- list(
      resumen_modelo = summary(modelo),
      
      tabla_metricas = kable(
        data.frame(
          M√©trica = c("AUC", "Exactitud", "Sensibilidad", "Especificidad", "F1 Score"),
          Valor = round(c(auc_valor, exactitud, sensibilidad, especificidad, f1), 3)
        ),
        caption = paste("M√©tricas del modelo:", nombre_modelo),
        format = "html"
      ) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
      
      matriz_confusion = kable(as.data.frame(matriz$table),
                               caption = paste("Matriz de Confusi√≥n:", nombre_modelo),
                               format = "html") %>%
        kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
      
      auc = auc_valor,
      
      grafico_roc = ggroc(roc(data[[evento]], prob)) +
        labs(title = paste("Curva ROC -", nombre_modelo),
             x = "1 - Especificidad", y = "Sensibilidad") +
        theme_minimal()
    )
  }
  
  # Ordenar por m√©trica elegida y seleccionar los mejores
  top_modelos <- resumen_modelos %>%
    arrange(desc(.data[[ordenar_por]])) %>%
    head(top_n)
  
  # Salida
  list(
    todos_los_resultados = resultados,
    resumen_modelos = kable(top_modelos, caption = paste("Top", top_n, "modelos seg√∫n", ordenar_por), format = "html") %>%
      kable_styling(bootstrap_options = c("striped", "hover", "condensed")),
    top_modelos_info = top_modelos
  )
}
```

## Preparar los datos para supervivencia {#Preparar}

```{r}
preparar_datos_supervivencia <- function(data) {
  data %>%
    mutate(
      FECHA_INICIO_QT = as.Date(FECHA_INICIO_QT),
      FECHA_ULTIMO_CONTROL = as.Date(FECHA_ULTIMO_CONTROL),
      tiempo_sg = as.numeric(difftime(FECHA_ULTIMO_CONTROL, FECHA_INICIO_QT, units = "days")) / 30.44, # en meses
      estado_SG = ifelse(data[["ESTADO_ULTIMO_\nCONTROL"]] == "MCE", 1, 0),
      ab = factor(ANTIBIOTICO),
      subtipo = factor(FENOTIPO_IHQ_CAT)
    ) %>%
    filter(!is.na(tiempo_sg) & tiempo_sg >= 0)
}
```

## Realizar el an√°lisis de supervivencia {#Supervivencia}

```{r}
analisis_supervivencia <- function(data) {
  necesarias <- c("tiempo_sg", "estado_SG", "ab", "subtipo")
  faltantes <- necesarias[!necesarias %in% names(data)]
  if (length(faltantes) > 0) stop(paste("Faltan variables necesarias:", paste(faltantes, collapse = ", ")))

  data <- data %>% drop_na(tiempo_sg, estado_SG, ab, subtipo)

  # Supervivencia global
  km_total <- survfit(Surv(tiempo_sg, estado_SG) ~ 1, data = data)
  g1 <- ggsurvplot(km_total, data = data, title = "Supervivencia Global", xlab = "Meses", ylab = "Prob. de supervivencia")

  # Subtipos moleculares
  km_subtipo <- survfit(Surv(tiempo_sg, estado_SG) ~ subtipo, data = data)
  g2 <- ggsurvplot(km_subtipo, data = data, pval = TRUE, legend.title = "Subtipo", title = "SG por subtipo tumoral")

  # Uso de antibi√≥ticos
  km_ab <- survfit(Surv(tiempo_sg, estado_SG) ~ ab, data = data)
  g3 <- ggsurvplot(km_ab, data = data, pval = TRUE, legend.title = "Antibi√≥ticos", title = "SG por uso de antibi√≥ticos")

  # Por subtipo y antibi√≥ticos
  g4_list <- list()
  for (tipo in levels(data$subtipo)) {
    subdata <- data %>% filter(subtipo == tipo)
    if (nrow(subdata) >= 10 && length(unique(subdata$ab)) > 1) {
      fit_sub <- survfit(Surv(tiempo_sg, estado_SG) ~ ab, data = subdata)
      g4_list[[tipo]] <- ggsurvplot(fit_sub, data = subdata, pval = TRUE,
                                    title = paste("SG por AB en subtipo:", tipo),
                                    legend.title = "Antibi√≥ticos")
    }
  }

  return(list(
    global = g1,
    por_subtipo = g2,
    por_ab = g3,
    por_subtipo_y_ab = g4_list
  ))
}


```

# Entorno

```{r sessionInfo, results='hold', echo=FALSE}
# restore output hook
knit_hooks$set(output = function(x, options){paste(c("```", x, "```"), collapse = "\n")})
cat("Variables in memory:\n")
ls()
cat("\n")
sessionInfo()
```

::: {style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;           padding: 12px 24px; background-color: #0056b3; color: #ffffff;           text-decoration: none; border-radius: 8px;           box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);           font-size: 16px; font-weight: 600;           transition: background-color 0.3s, color 0.3s;"}
<a href="#top" class="floating-button">Volver al inicio</a>
:::
